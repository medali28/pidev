{% extends 'base.html.twig' %}

{% block title %}Edit Ambulance{% endblock %}

{% block body %}
    {{ include('navigation.html.twig') }}
    {{ include('header.html.twig') }}
<section class="section-padding">
    <div >
        <div >
            <div class="col-lg-8 col-12 mt-3 mx-auto">
                <div class="custom-block custom-block-topics-listing bg-white shadow-lg mb-5">
                    <div class="d-flex">

                        <div class="custom-block-topics-listing-info d-flex">
                            <div>
    <h1>Modifier la demande d'Ambulance</h1>




                                <form action="{{ path('app_ambulance_edit', {'id': ambulance.id}) }}" method="post">
                                    <label for="besoin_infirmier">Vous avez besoin d'infirmier ?</label>
                                    <input type="checkbox" id="besoin_infirmier" name="besoin_infirmier" {% if ambulance.besoinInfirmier %}checked{% endif %}>

                                    <div id="map" style="height: 400px;"></div>
                                    <input type="hidden" id="latitude" name="latitude" value="{{ ambulance.latitude }}">
                                    <input type="hidden" id="longitude" name="longitude" value="{{ ambulance.longitude }}">

                                    <button type="submit" class="btn custom-btn mt-3 mt-lg-4 submit-btn">Enregistrer</button>
                                </form>


                                <a href="{{ path('app_ambulance_index') }}">Retour Ã  la liste</a>
                                {{ include('ambulance/_delete_form.html.twig') }}
    </div>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
</section>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var map;

            // Use the existing ambulance data to set the initial map and hidden fields
            var initialLatitude = {{ ambulance.latitude }};
            var initialLongitude = {{ ambulance.longitude }};

            showMap({ latitude: initialLatitude, longitude: initialLongitude });

            function showMap(geolocationData) {
                map = L.map('map').setView([geolocationData.latitude, geolocationData.longitude], 13);

                L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {}).addTo(map);

                L.marker([geolocationData.latitude, geolocationData.longitude])
                    .addTo(map);

                // Add a map click event listener
                map.on('click', function (e) {
                    var newLatitude = e.latlng.lat;
                    var newLongitude = e.latlng.lng;

                    // Update the map with the new location
                    updateMap(newLatitude, newLongitude);
                });
            }

            function updateMap(newLatitude, newLongitude) {
                // Remove the existing marker
                map.eachLayer(function (layer) {
                    if (layer instanceof L.Marker) {
                        map.removeLayer(layer);
                    }
                });

                // Add a new marker with the updated location
                L.marker([newLatitude, newLongitude])
                    .addTo(map);

                // Update hidden fields with the new coordinates
                document.getElementById('latitude').value = newLatitude;
                document.getElementById('longitude').value = newLongitude;
            }
        });
    </script>


    {{ include('footer.html.twig') }}

{% endblock %}
